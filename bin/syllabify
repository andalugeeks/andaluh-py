#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# vim: ts=4

import argparse
import logging
import os
import sys
from epa_syllabifier import syllabify

logging.basicConfig(level=logging.INFO)

def syllabify_file(file_path):
    output = ""
    with open(file_path, "r", encoding="utf-8") as f:
        for line in f:
            # check if line is empty
            if not line.strip():
                output += "\n\n"
                continue
            for word in line.split():
                stripped_word = word.strip()
                if stripped_word:
                    try:
                        output += '-'.join(syllabify(stripped_word)) + " "
                    except Exception as e:
                        logging.error(f"Error syllabifying {stripped_word}: {e}")
                        output += stripped_word + " "
                        continue
    return output

def main():
    parser = argparse.ArgumentParser(description="Syllabify a word")
    parser.add_argument("--word", "-w", type=str, help="The EPA word to syllabify")
    parser.add_argument("--file", "-f", type=str, help="The file to syllabify")
    args = parser.parse_args()
    if args.word:
        print('-'.join(syllabify(args.word)))
    elif args.file:
        if not os.path.exists(args.file):
            logging.error(f"File {args.file} does not exist")
            sys.exit(1)
        result = syllabify_file(args.file)
        print("=" * 80)
        print(result)
    else:
        parser.print_help()
        sys.exit(1)

if __name__ == "__main__":
    main()
